const { MongoClient } = require('mongodb')
// import * as uuid from 'uuid'
const fetch = require('node-fetch')
// import {
// 	MONGO_URL,
// } from './environments'
let MONGO_URL = 'mongodb://localhost'
async function updateDistrict() {
    console.log('üöÄ  Server ready')
    const client = new MongoClient(MONGO_URL)
    function removeVietnameseTones(str) {
        str = str.replace(/√†|√°|·∫°|·∫£|√£|√¢|·∫ß|·∫•|·∫≠|·∫©|·∫´|ƒÉ|·∫±|·∫Ø|·∫∑|·∫≥|·∫µ/gi, "a")
        str = str.replace(/√®|√©|·∫π|·∫ª|·∫Ω|√™|·ªÅ|·∫ø|·ªá|·ªÉ|·ªÖ/gi, "e")
        str = str.replace(/√¨|√≠|·ªã|·ªâ|ƒ©/gi, "i")
        str = str.replace(/√≤|√≥|·ªç|·ªè|√µ|√¥|·ªì|·ªë|·ªô|·ªï|·ªó|∆°|·ªù|·ªõ|·ª£|·ªü|·ª°/gi, "o")
        str = str.replace(/√π|√∫|·ª•|·ªß|≈©|∆∞|·ª´|·ª©|·ª±|·ª≠|·ªØ/gi, "u")
        str = str.replace(/·ª≥|√Ω|·ªµ|·ª∑|·ªπ/gi, "y")
        str = str.replace(/ƒë/gi, "d")
        // Some system encode vietnamese combining accent as individual utf-8 characters
        // M·ªôt v√†i b·ªô encode coi c√°c d·∫•u m≈©, d·∫•u ch·ªØ nh∆∞ m·ªôt k√≠ t·ª± ri√™ng bi·ªát n√™n th√™m hai d√≤ng n√†y
        str = str.replace(/\u0300|\u0301|\u0303|\u0309|\u0323/g, "") // ÃÄ ÃÅ ÃÉ Ãâ Ã£  huy·ªÅn, s·∫Øc, ng√£, h·ªèi, n·∫∑ng
        str = str.replace(/\u02C6|\u0306|\u031B/g, "") // ÀÜ ÃÜ Ãõ  √Ç, √ä, ƒÇ, ∆†, ∆Ø
        // Remove extra spaces
        // B·ªè c√°c kho·∫£ng tr·∫Øng li·ªÅn nhau
        str = str.replace(/ + /g, " ")
        str = str.trim()
        // Remove punctuations
        // B·ªè d·∫•u c√¢u, k√≠ t·ª± ƒë·∫∑c bi·ªát
        str = str.replace(/!|@|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'|\"|\&|\#|\[|\]|~|\$|_|`|-|{|}|\||\\/g, " ")
        return str
    }

    try {
        await client.connect()
        console.log('üå±  Database seeder is running')
        const db = client.db('test14359')

        let codeProvinces = {
            'Th√†nh ph·ªë H√† N·ªôi': '01', 'T·ªânh H√† Giang': '02', 'T·ªânh Cao B·∫±ng': '04', 'T·ªânh B·∫Øc K·∫°n': '06',
            'T·ªânh Tuy√™n Quang': '08', 'T·ªânh L√†o Cai': '10', 'T·ªânh ƒêi·ªán Bi√™n': '11', 'T·ªânh Lai Ch√¢u': '12',
            'T·ªânh S∆°n La': '14', 'T·ªânh Y√™n B√°i': '15', 'T·ªânh Ho√† B√¨nh': '17', 'T·ªânh Th√°i Nguy√™n': '19',
            'T·ªânh L·∫°ng S∆°n': '20', 'T·ªânh Qu·∫£ng Ninh': '22', 'T·ªânh B·∫Øc Giang': '24', 'T·ªânh Ph√∫ Th·ªç': '25',
            'T·ªânh Vƒ©nh Ph√∫c': '26', 'T·ªânh B·∫Øc Ninh': '27', 'T·ªânh H·∫£i D∆∞∆°ng': '30', 'Th√†nh ph·ªë H·∫£i Ph√≤ng': '31',
            'T·ªânh H∆∞ng Y√™n': '33', 'T·ªânh Th√°i B√¨nh': '34', 'T·ªânh H√† Nam': '35', 'T·ªânh Nam ƒê·ªãnh': '36',
            'T·ªânh Ninh B√¨nh': '37', 'T·ªânh Thanh H√≥a': '38', 'T·ªânh Ngh·ªá An': '40', 'T·ªânh H√† Tƒ©nh': '42',
            'T·ªânh Qu·∫£ng B√¨nh': '44', 'T·ªânh Qu·∫£ng Tr·ªã': '45', 'T·ªânh Th·ª´a Thi√™n Hu·∫ø': '46', 'Th√†nh ph·ªë ƒê√† N·∫µng': '48',
            'T·ªânh Qu·∫£ng Nam': '49', 'T·ªânh Qu·∫£ng Ng√£i': '51', 'T·ªânh B√¨nh ƒê·ªãnh': '52', 'T·ªânh Ph√∫ Y√™n': '54',
            'T·ªânh Kh√°nh H√≤a': '56', 'T·ªânh Ninh Thu·∫≠n': '58', 'T·ªânh B√¨nh Thu·∫≠n': '60', 'T·ªânh Kon Tum': '62',
            'T·ªânh Gia Lai': '64', 'T·ªânh ƒê·∫Øk L·∫Øk': '66', 'T·ªânh ƒê·∫Øk N√¥ng': '67', 'T·ªânh L√¢m ƒê·ªìng': '68',
            'T·ªânh B√¨nh Ph∆∞·ªõc': '70', 'T·ªânh T√¢y Ninh': '72', 'T·ªânh B√¨nh D∆∞∆°ng': '74', 'T·ªânh ƒê·ªìng Nai': '75',
            'T·ªânh B√† R·ªãa - V≈©ng T√†u': '77', 'Th√†nh ph·ªë H·ªì Ch√≠ Minh': '79', 'T·ªânh Long An': '80', 'T·ªânh Ti·ªÅn Giang': '82',
            'T·ªânh B·∫øn Tre': '83', 'T·ªânh Tr√† Vinh': '84', 'T·ªânh Vƒ©nh Long': '86', 'T·ªânh ƒê·ªìng Th√°p': '87',
            'T·ªânh An Giang': '89', 'T·ªânh Ki√™n Giang': '91', 'Th√†nh ph·ªë C·∫ßn Th∆°': '92', 'T·ªânh H·∫≠u Giang': '93',
            'T·ªânh S√≥c TrƒÉng': '94', 'T·ªânh B·∫°c Li√™u': '95', 'T·ªânh C√† Mau': '96'
        }

        let provinces = []

        provinces = Object.keys(codeProvinces).map(nameP => {
            const mediProvinceCode = codeProvinces[nameP]
            return { code: codeProvinces[nameP], name: nameP }
        })
        for (nameP in codeProvinces) {
            console.log(codeProvinces[nameP])
            await db.collection('places').findOneAndUpdate(
                { code: codeProvinces[nameP] },
                {
                    $set: {
                        code: codeProvinces[nameP],
                        type: 'PROVINCE',
                        codeFull: '00000-000HH-' + codeProvinces[nameP],
                        codeParent: '0',
                        name: nameP,
                        fullName: nameP,
                        shortName: nameP,
                        acronym: removeVietnameseTones(nameP).split(' ').map(p => p[0]).join('').toLocaleLowerCase().trim(),
                        unsignedName: removeVietnameseTones(nameP).toLocaleLowerCase().trim(),
                        isActive: true,
                        createdAt: +new Date(),
                        createdBy: {
                            _id: '0',
                            username: 'admin',
                            fullName: 'Administrator'
                        }
                    }
                },
                { upsert: true }
            )
            let getHuyen = await fetch("https://baohiemxahoi.gov.vn/UserControls/BHXH/BaoHiemYTe/HienThiHoGiaDinh/AjaxPost.aspx/GetHuyenByLstmatinh", {
                "headers": {
                    "accept": "application/json, text/javascript, */*; q=0.01",
                    "accept-language": "en-US,en;q=0.9",
                    "content-type": "application/json; charset=UTF-8",
                    "sec-fetch-dest": "empty",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-origin",
                    "x-requested-with": "XMLHttpRequest"
                },
                "referrer": "https://baohiemxahoi.gov.vn/tracuu/Pages/diem-thu-dai-ly.aspx",
                "referrerPolicy": "no-referrer-when-downgrade",
                "body": `{lstmatinh:\"${codeProvinces[nameP]}TTT\"} `,
                "method": "POST",
                "mode": "cors",
                "credentials": "include"
            })
            let getHuyen1 = await getHuyen.json()
            let getHuyen2 = getHuyen1.d ? JSON.parse(getHuyen1.d) : undefined
            if (getHuyen2.length) {
                for (h = 0; h < getHuyen2.length; h++) {
                    getHuyen2[h].TenHuyen
                    if (getHuyen2[h].TenHuyen.split(' ')[0] !== 'Huy·ªán'
                        && getHuyen2[h].TenHuyen.split(' ')[0] !== 'Qu·∫≠n'
                        && getHuyen2[h].TenHuyen.split(' ')[0] !== 'Th√†nh'
                        && getHuyen2[h].TenHuyen.split(' ')[0] !== 'Th·ªã'
                    ) {
                        console.log(getHuyen2[h].TenHuyen);
                    }
                    await db.collection('places').findOneAndUpdate(
                        { code: getHuyen2[h].MaHuyen },
                        {
                            $set: {
                                code: getHuyen2[h].MaHuyen,
                                codeFull: '00000-' + getHuyen2[h].MaHuyen + '-' + codeProvinces[nameP],
                                type: 'DISTRICT',
                                codeParent: codeProvinces[nameP],
                                name: getHuyen2[h].TenHuyen,
                                fullName: getHuyen2[h].TenHuyen + ', ' + nameP,
                                shortName: (getHuyen2[h].TenHuyen.replace(/^(Huy·ªán|Th√†nh ph·ªë|Th·ªã x√£|Qu·∫≠n)/i, '')
                                    + ', ' + nameP.replace(/^(T·ªânh|Th√†nh ph·ªë)/i, '')).replace('  ', ''),
                                acronym:
                                    (removeVietnameseTones(getHuyen2[h].TenHuyen + ' ' + nameP)
                                        .split(' ').map(p => p[0]).join('') + '--'
                                        + removeVietnameseTones(getHuyen2[h].TenHuyen.replace(/^(Huy·ªán|Th√†nh ph·ªë|Th·ªã x√£|Qu·∫≠n)/i, '') + ' ' + nameP.replace(/^(T·ªânh|Th√†nh ph·ªë)/i, ''))
                                            .split(' ').map(p => p[0]).join('')).toLocaleLowerCase(),
                                unsignedName: (removeVietnameseTones(getHuyen2[h].TenHuyen + ' ' + nameP)
                                    + '--'
                                    + removeVietnameseTones(getHuyen2[h].TenHuyen
                                        .replace(/^(Huy·ªán|Th√†nh ph·ªë|Th·ªã x√£|Qu·∫≠n)/i, '') + ' ' + nameP
                                            .replace(/^(T·ªânh|Th√†nh ph·ªë)/i, ''))
                                ).toLocaleLowerCase(),
                                isActive: true,
                                createdAt: +new Date(),
                                createdBy: {
                                    _id: '0',
                                    username: 'admin',
                                    fullName: 'Administrator'
                                }
                            }
                        },
                        { upsert: true }
                    )
                }
            }

        }
        let districts = await db.collection('places').find({ type: 'DISTRICT' }).toArray()
        console.log('Start update Ward')

        for (let i = 0; i < districts.length; i++) {
            try {
                console.log(i)
                let xa1 = await fetch("https://baohiemxahoi.gov.vn/UserControls/BHXH/BaoHiemYTe/HienThiHoGiaDinh/AjaxPost.aspx/GetPhuongBylstmahuyen", {
                    "headers": {
                        "accept": "application/json, text/javascript, */*; q=0.01",
                        "accept-language": "en-US,en;q=0.9",
                        "content-type": "application/json; charset=UTF-8",
                        "sec-fetch-dest": "empty",
                        "sec-fetch-mode": "cors",
                        "sec-fetch-site": "same-origin",
                        "x-requested-with": "XMLHttpRequest"
                    },
                    "referrer": "https://baohiemxahoi.gov.vn/tracuu/Pages/diem-thu-dai-ly.aspx",
                    "referrerPolicy": "no-referrer-when-downgrade",
                    "body": `{lstmahuyen:\"${districts[i].code}\"} `,
                    "method": "POST",
                    "mode": "cors",
                    "credentials": "include"
                })
                let xa2 = await xa1.json()
                let xa3 = xa2.d ? JSON.parse(xa2.d) : undefined
                if (xa3.length) {
                    for (x = 0; x < xa3.length; x++) {
                        await db.collection('places').findOneAndUpdate(
                            { code: xa3[x].MaXa },
                            {
                                $set: {
                                    code: xa3[x].MaXa,
                                    codeFull: districts[i].codeFull.replace('00000', xa3[x].MaXa),
                                    type: 'WARD',
                                    codeParent: districts[i].code,
                                    name: xa3[x].TenXa,
                                    fullName: xa3[x].TenXa + ', ' + districts[i].fullName,
                                    shortName: (xa3[x].TenXa.replace(/^(X√£|Th·ªã tr·∫•n|Ph∆∞·ªùng)/i, '') + ', ' + districts[i].shortName).replace('  ', ''),
                                    acronym: removeVietnameseTones(
                                        xa3[x].TenXa.split(' ').map(p => p[0]).join('')).toLocaleLowerCase() + districts[i].acronym.split('--')[0]
                                        + '--' + removeVietnameseTones(xa3[x].TenXa.split(' ').map(p => p[0]).join('')).toLocaleLowerCase()
                                        + districts[i].acronym.split('--')[1]
                                    ,
                                    unsignedName: removeVietnameseTones(xa3[x].TenXa).toLocaleLowerCase() + ' ' + districts[i].unsignedName.split('--')[0]
                                        + '--' + removeVietnameseTones(xa3[x].TenXa).toLocaleLowerCase() + ' ' + districts[i].unsignedName.split('--')[1],
                                    isActive: true,
                                    createdAt: +new Date(),
                                    createdBy: {
                                        _id: '0',
                                        username: 'admin',
                                        fullName: 'Administrator'
                                    }
                                }
                            },
                            { upsert: true }
                        )
                    }
                }
            } catch (error) {
                console.log(`err on : ${districts[i].code}`)
            }
        }
        client.close()
        console.log('object')
    } catch (err) {
        console.log('‚ùå  Server error', err.stack)
    }
}
updateDistrict()